version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: inventory-postgres
    environment:
      POSTGRES_DB: inventory_db
      POSTGRES_USER: inventory_user
      POSTGRES_PASSWORD: inventory_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - inventory-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U inventory_user -d inventory_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  inventory-service:
    build: .
    container_name: inventory-service
    ports:
      - "8000:8000"
      - "8001:8001"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=inventory_user
      - DB_PASSWORD=inventory_password
      - DB_NAME=inventory_db
      - DB_DRIVER=postgres
      - GRPC_PORT=8000
      - REST_PORT=8001
      - RABBITMQ_URL=amqp://synapsis:synapsis@rabbitmq:5672
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - inventory-network
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: inventory-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: synapsis
      RABBITMQ_DEFAULT_PASS: synapsis
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - inventory-network
    restart: unless-stopped


volumes:
  postgres_data:

networks:
  inventory-network:
    driver: bridge
